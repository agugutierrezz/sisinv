name: CI

on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # Si algún día agregás system specs con Capybara+Selenium,
      # esto instala Chrome estable en el runner:
      - name: Setup Chrome (for future system specs)
        uses: browser-actions/setup-chrome@v1

      - name: Prepare DB
        run: |
          bundle exec rails db:prepare
          RAILS_ENV=test bundle exec rails db:prepare

      - name: Run RSpec
        run: bundle exec rspec --format progress

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          if-no-files-found: ignore

  # Opcional: validar/generar el OpenAPI con RSwag y adjuntar el YAML
  swagger:
    runs-on: ubuntu-latest
    needs: [test]  # genera docs solo si los tests pasan
    env:
      RAILS_ENV: test
      RSWAG_DRY_RUN: "1"  # evita ejecutar lógica y que SimpleCov ensucie coverage
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Generate Swagger (OpenAPI)
        run: bundle exec rake rswag
      - name: Upload swagger.yaml
        uses: actions/upload-artifact@v4
        with:
          name: swagger-v1
          path: swagger/v1/swagger.yaml
